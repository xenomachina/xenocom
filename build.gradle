// Copyright Â© 2016 Laurence Gonsalves
//
// This file is part of xenocom, a library which can be found at
// http://github.com/xenomachina/xenocom
//
// This library is free software; you can redistribute it and/or modify it
// under the terms of the GNU Lesser General Public License as published by the
// Free Software Foundation; either version 2.1 of the License, or (at your
// option) any later version.
//
// This library is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
// for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this library; if not, see http://www.gnu.org/licenses/

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "net.researchgate:gradle-release:$gradle_release_version"
    }
}

plugins {
    id 'org.jmailen.kotlinter' version '1.9.0'
}

apply plugin: 'net.researchgate.release'
apply plugin: 'maven'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'signing'

assert name == 'xenocom'
description = "Xenomachina's common support library."

group 'com.xenomachina'
project.ext {
    githubUser = "xenomachina"
    vcsDev = "https://github.com/$githubUser"
    githubRepo = "$githubUser/$name"
    vcsUrl = "https://github.com/$githubRepo"
}

sourceCompatibility = 1.6

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile "io.kotlintest:kotlintest:$kotlintest_version"
    // This is to ensure that kotlintest uses the correct version of
    // kotlin-reflect
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

//////////////////////////////////////////////////////////////////////////////
// Dokka config
//////////////////////////////////////////////////////////////////////////////

dokka {
    moduleName = project.name

    // TODO: includes = ['Module.md']

    linkMapping {
        dir = "src/main/kotlin"
        url = "$project.ext.vcsUrl/blob/master/src/main/kotlin"
        suffix = "#L"
    }
    sourceDirs = files('src/main/kotlin')
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = javadoc.destinationDir

    linkMapping {
        dir = "src/main/kotlin"
        url = "$project.ext.vcsUrl/blob/master/src/main/kotlin"
        suffix = "#L"
    }
    sourceDirs = files('src/main/kotlin')
}


//Based on comment by @jnizet at https://github.com/Kotlin/dokka/issues/42
task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if (System.env.CI != "true") {
    signing {
        useGpgCmd()
        sign configurations.archives
    }

    def ossrhUsernameOrEmpty = hasProperty('ossrhUsername') ? ossrhUsername : ''
    def ossrhPasswordOrEmpty = hasProperty('ossrhPassword') ? ossrhPassword : ''

    //////////////////////////////////////////////////////////////////////////////
    // Maven Central upload
    //////////////////////////////////////////////////////////////////////////////
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsernameOrEmpty, password: ossrhPasswordOrEmpty)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsernameOrEmpty, password: ossrhPasswordOrEmpty)
                }

                pom.project {
                    packaging 'jar'

                    name project.name
                    description project.description
                    url project.ext.vcsUrl

                    scm {
                        connection "scm:git:$project.ext.vcsUrl"
                        developerConnection "scm:git:$project.ext.vcsDev"
                        url "$project.ext.vcsUrl"
                    }

                    licenses {
                        license {
                            name "GNU Lesser General Public License, Version 2.1"
                            url "https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt"
                            distribution "repo"
                        }
                    }

                    developers {
                        developer {
                            id "xenomachina"
                            name "Laurence Gonsalves"

                            // State-of-the art anti-scraper encryption. ;-)
                            email "moc.anihcamonex@ecnerual".reverse()
                        }
                    }
                }
            }
        }
    }

    //////////////////////////////////////////////////////////////////////////////
    // gradle-release plugin config
    //////////////////////////////////////////////////////////////////////////////

    // Based on https://github.com/researchgate/gradle-release

    // This causes './gradlew release' to also upload release packages
    afterReleaseBuild.dependsOn uploadArchives
}
